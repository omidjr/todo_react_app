{"version":3,"sources":["components/TodoCollection.jsx","components/TodoForm.jsx","components/EditTodoModal.jsx","components/TodoList.jsx","components/TodoActions.jsx","components/NavbarAddTodo.jsx","components/Navbar.jsx","components/CollectionList.jsx","components/Sidebar.jsx","App.js","Hooks/useNewTodo.jsx","Hooks/useTodos.jsx","Hooks/useShowSidebar.jsx","Hooks/useNewCollection.jsx","Hooks/useCollections.jsx","Hooks/useChosenCollection.jsx","reportWebVitals.js","index.js"],"names":["TodoCollection","chosenCollection","className","TodoForm","newTodo","setNewTodo","todos","setTodos","onNewTodoChange","useCallback","e","target","value","formSubmitted","preventDefault","trim","id","length","content","done","collection","onSubmit","autoComplete","placeholder","name","onChange","width","height","viewBox","fill","xmlns","d","stroke","EditTodoModal","setModal","chosenTodo","useState","editedTodo","setEditedTodo","modalRef","useRef","useEffect","handler","current","contains","document","addEventListener","removeEventListener","ref","type","onClick","TodoList","modal","setChosenTodo","todoDone","todo","index","newTodos","splice","editTodo","removeTodo","filter","otherTodo","map","checked","style","display","TodoActions","markAllDone","updatedTodos","deleteAllTodos","NavbarAddTodo","setAddModal","addModalRef","Navbar","showSidebar","setShowSidebar","addModal","window","innerWidth","setWidth","handleWindowResize","sidebarToggle","CollectionList","setNewCollection","collections","setCollections","setChosenCollection","collectionsArr","c","some","idx","indexOf","newCollections","reduce","obj","set","Map","values","Sidebar","newCollection","toLowerCase","onNewCollectionChange","join","App","useNewTodo","useTodos","useShowSidebar","useNewCollection","useCollections","useChosenCollection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3322c7fb.chunk.js","sourcesContent":["import \"./TodoCollection.css\";\n\nconst TodoCollection = ({chosenCollection}) => {\n    return (\n        <p className=\"todoCollectionName\">Collection : {chosenCollection}</p>\n    )\n}\n\nexport default TodoCollection\n","import \"./TodoForm.css\";\nimport {React, useCallback} from 'react'\n\nconst TodoForm = ({newTodo, setNewTodo, todos, setTodos, chosenCollection}) => {\n    const onNewTodoChange = useCallback((e) => {\n        setNewTodo(e.target.value);\n    }, []);\n\n    const formSubmitted = useCallback((e) => {\n        e.preventDefault();\n        if (!newTodo.trim()) return; //Avoid empty todos\n        setTodos([\n        {\n            id: todos.length ? todos[0].id + 1 : 1,\n            content: newTodo,\n            done: false,\n            collection: chosenCollection\n        },\n        ...todos\n        ]);\n        setNewTodo('');\n    }, [newTodo, todos]);\n\n    return (\n        <div>\n            <form className=\"addTodo_form\" onSubmit={formSubmitted}>\n                <input\n                    className=\"addTodo_input\"\n                    autoComplete=\"off\"\n                    placeholder=\"Add a Todo...\"\n                    id=\"newTodo\"\n                    name=\"newTodo\"\n                    value={newTodo}\n                    onChange={onNewTodoChange}\n                />\n                <button className=\"addTodo_btn\">\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M9 1V17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        <path d=\"M1 9H17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default TodoForm","import \"./EditTodoModal.css\";\nimport { useCallback, useState, useRef, useEffect } from \"react\";\n\nconst EditTodoModal = ({setModal, chosenTodo}) => {\n    const [editedTodo, setEditedTodo] = useState('')\n\n    const onNewTodoChange = (e) => {\n        setEditedTodo(e.target.value);\n    }\n\n    const formSubmitted = useCallback((e) => {\n        e.preventDefault();\n        if (!editedTodo.trim()) return; //Avoid empty todos\n        chosenTodo.content = editedTodo;\n        setModal(false);\n    }, [editedTodo]);\n\n    let modalRef = useRef();\n\n    useEffect(() => {\n        let handler = (e) => {\n            if (!modalRef.current.contains(e.target)) {\n                setModal(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handler);\n        \n        return () => {\n            document.removeEventListener(\"mousedown\", handler);\n        }\n    })\n\n    return (\n            <div ref={modalRef} className=\"center popup\"> \n                <div className=\"editIcon\">\n                    <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M0 17.416V22H4.58397L18.1097 8.47423L13.5258 3.89026L0 17.416ZM21.6425 4.94152C22.1192 4.46479 22.1192 3.68857 21.6425 3.21184L18.7882 0.35755C18.3114 -0.119183 17.5352 -0.119183 17.0585 0.35755L14.8215 2.59453L19.4055 7.1785L21.6425 4.94152Z\" fill=\"#E94560\"/>\n                    </svg>\n                </div>\n                <div className=\"editTitle\">\n                    <p>Edit Todo: {chosenTodo.content}</p>\n                </div>\n                <form className=\"editForm\">\n                    <input type=\"text\"\n                        autoComplete=\"off\"\n                        placeholder=\"Edit Todo...\"\n                        onChange={onNewTodoChange} />\n                    <div className=\"editForm_buttons\">\n                        <button onClick={formSubmitted}>submit</button>\n                        <button onClick={() => setModal(false)}>cancel</button>\n                    </div>\n                </form>\n            </div>\n    )\n}\n\nexport default EditTodoModal\n","import \"./TodoList.css\";\nimport {React, useCallback, useState} from 'react'\nimport EditTodoModal from \"./EditTodoModal\";\n\nconst TodoList = ({todos, setTodos, chosenCollection}) => {\n    const [modal, setModal] = useState(false);\n    const [chosenTodo, setChosenTodo] = useState({});\n\n    const todoDone = useCallback((todo, index) => (e) => {\n        const newTodos = [...todos];\n        newTodos.splice(index, 1, {\n            ...todo,\n            done: !todo.done\n        });\n        setTodos(newTodos);\n    }, [todos]);\n\n    const editTodo = useCallback((todo) => (e) => {\n        setModal(true);\n        setChosenTodo(todo);\n    }, [])\n\n    const removeTodo = useCallback((todo) => (e) => {\n        setTodos(todos.filter(otherTodo => otherTodo !== todo));\n    }, [todos]);\n\n    return (\n        <div className=\"todoList\">\n            <ul>\n                {todos.map((todo, index) => \n                    {return todo.collection === chosenCollection ? (\n                        <li className=\"todo\" key={todo.id}>\n                        <div className=\"todoCheck\">\n                            <input\n                            type=\"checkbox\"\n                            checked={todo.done}\n                            onChange={todoDone(todo, index)}\n                            />\n                        </div>\n                        <div className=\"todoNameAndActions\">\n                            <p className={todo.done ? 'done' : ''}>{todo.content}</p>\n                            <div className=\"todoNameAndActions_actions\">\n                                <span onClick={editTodo(todo)} className=\"modal_open\">\n                                <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M0 17.416V22H4.58397L18.1097 8.47423L13.5258 3.89026L0 17.416ZM21.6425 4.94152C22.1192 4.46479 22.1192 3.68857 21.6425 3.21184L18.7882 0.35755C18.3114 -0.119183 17.5352 -0.119183 17.0585 0.35755L14.8215 2.59453L19.4055 7.1785L21.6425 4.94152Z\" fill=\"#E94560\"/>\n                                    </svg>\n                                </span>\n                                <span onClick={removeTodo(todo)}>\n                                    <svg width=\"22\" height=\"24\" viewBox=\"0 0 22 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M18.59 8.03348H3.41005C2.75005 8.03348 2.20005 8.53348 2.31005 9.13348L4.07005 22.2335C4.18005 23.2335 5.17005 23.9335 6.27005 23.9335H15.62C16.72 23.9335 17.71 23.2335 17.82 22.2335L19.58 9.13348C19.69 8.53348 19.25 8.03348 18.59 8.03348Z\" fill=\"#E94560\"/>\n                                    <path d=\"M19.8 2H14.3C14.3 0.9 13.31 0 12.1 0H9.9C8.69 0 7.7 0.9 7.7 2H2.2C0.99 2 0 2.9 0 4V5C0 5.6 0.44 6 1.1 6H20.9C21.56 6 22 5.6 22 5V4C22 2.9 21.01 2 19.8 2Z\" fill=\"#E94560\"/>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </li>\n                    ) : (\n                        <li style={{display: 'none'}} />\n                    )}\n                )}\n            </ul>\n            {modal ? <EditTodoModal  setModal={setModal} chosenTodo={chosenTodo} /> : <div style={{display: \"none\"}} />}\n        </div>\n    )\n}\n\nexport default TodoList\n","import \"./TodoActions.css\";\nimport {React, useCallback} from 'react'\n\nconst TodoActions = ({todos, setTodos}) => {\n    const markAllDone = useCallback(() => {\n        const updatedTodos = todos.map(todo => {\n            return {\n                ...todo,\n                done: true,\n            };\n        });\n        setTodos(updatedTodos);\n        }, [todos]);\n        \n        const deleteAllTodos = useCallback(() => {\n            setTodos([])\n        },\n        [todos]);\n\n    return (\n        <div className='todoActions'>\n            <div className={todos.length !== 0 ? 'todoActions_done' : 'todoActions_done_disabled'} onClick={markAllDone}>Mark all done</div>\n            <div className={todos.length !== 0 ? 'todoActions_delete' : 'todoActions_delete_disabled'} onClick={deleteAllTodos}>Delete all Todos</div>\n        </div>\n    )\n}\n\nexport default TodoActions\n","import { useCallback, useRef, useEffect } from 'react'\n\nexport const NavbarAddTodo = ({todos, setTodos, newTodo, setNewTodo, chosenCollection, setAddModal}) => {    \n    const formSubmitted = useCallback((e) => {\n        e.preventDefault();\n        if (!newTodo.trim()) return; //Avoid empty todos\n        setTodos([\n        {\n            id: todos.length ? todos[0].id + 1 : 1,\n            content: newTodo,\n            done: false,\n            collection: chosenCollection\n        },\n        ...todos\n        ]);\n        setNewTodo('');\n        setAddModal(false);\n    }, [newTodo, todos]);\n\n    const onNewTodoChange = useCallback((e) => {\n        setNewTodo(e.target.value);\n    }, []);\n\n    let addModalRef = useRef();\n\n    useEffect(() => {\n        let handler = (e) => {\n            if (!addModalRef.current.contains(e.target)) {\n                setAddModal(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handler);\n        \n        return () => {\n            document.removeEventListener(\"mousedown\", handler);\n        }\n    })\n\n    return (\n        <div ref={addModalRef} className=\"center popup\">\n            <div className=\"editIcon\">\n                <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M13 2V24\" stroke=\"#E94560\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    <path d=\"M2 13H24\" stroke=\"#E94560\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                </svg>\n            </div>\n            <div className=\"editTitle\">\n                <p>Add Todo</p>\n            </div>\n            <form className=\"editForm\">\n                <input type=\"text\"\n                    autoComplete=\"off\"\n                    placeholder=\"Add a Todo...\"\n                    onChange={onNewTodoChange} />\n                <div className=\"editForm_buttons\">\n                    <button onClick={formSubmitted}>submit</button>\n                    <button onClick={() => setAddModal(false)}>cancel</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import './Navbar.css';\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { NavbarAddTodo } from './NavbarAddTodo';\n\nconst Navbar = ({todos, setTodos, newTodo, setNewTodo, chosenCollection, showSidebar, setShowSidebar}) => {\n    const [addModal, setAddModal] = useState(false);\n    const [width, setWidth] = useState(window.innerWidth);\n    const breakPoint = 576;\n\n    useEffect(() => {\n        const handleWindowResize = () => setWidth(window.innerWidth);\n        window.addEventListener(\"resize\", handleWindowResize);\n         \n        return () => window.removeEventListener(\"resize\", handleWindowResize);\n       },[]);\n\n    const sidebarToggle = useCallback(() => {\n        setShowSidebar(!showSidebar);\n    });\n\n    return (\n        <>\n            {width > breakPoint ? (\n                <div className=\"navbar\">\n                <div className=\"navbarMenu\">\n                    <span>\n                        <svg onClick={sidebarToggle} width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M3.125 7.8125H21.875C22.7375 7.8125 23.4375 7.1125 23.4375 6.25C23.4375 5.3875 22.7375 4.6875 21.875 4.6875H3.125C2.2625 4.6875 1.5625 5.3875 1.5625 6.25C1.5625 7.1125 2.2625 7.8125 3.125 7.8125ZM21.875 10.9375H3.125C2.2625 10.9375 1.5625 11.6375 1.5625 12.5C1.5625 13.3625 2.2625 14.0625 3.125 14.0625H21.875C22.7375 14.0625 23.4375 13.3625 23.4375 12.5C23.4375 11.6375 22.7375 10.9375 21.875 10.9375ZM21.875 17.1875H3.125C2.2625 17.1875 1.5625 17.8875 1.5625 18.75C1.5625 19.6125 2.2625 20.3125 3.125 20.3125H21.875C22.7375 20.3125 23.4375 19.6125 23.4375 18.75C23.4375 17.8875 22.7375 17.1875 21.875 17.1875Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                    </span>\n                </div>\n                <div className=\"navbarIcons\">\n                    {chosenCollection ? (\n                        <button className=\"addTodo_btn nav_btn\" onClick={() => setAddModal(true)}>\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 1V17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                <path d=\"M1 9H17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            </svg>\n                        </button>\n                    ) : (\n                        <button className=\"navAddTodo_btn_disabled nav_btn\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 1V17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                <path d=\"M1 9H17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            </svg>\n                        </button>\n                    )}\n                    <span>\n                    <svg width=\"20\" height=\"25\" viewBox=\"0 0 20 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M18.9555 21.5171H1.54194C1.40701 21.5167 1.27443 21.4818 1.15678 21.4158C1.03913 21.3497 0.940327 21.2547 0.869745 21.1397C0.799163 21.0247 0.759148 20.8935 0.753501 20.7587C0.747854 20.6239 0.776762 20.4899 0.83748 20.3694C1.81412 18.401 2.32591 16.2346 2.33346 14.0372V11.2273C2.33346 9.12806 3.16739 7.11479 4.65178 5.63039C6.13618 4.146 8.14945 3.31207 10.2487 3.31207C12.348 3.31207 14.3612 4.146 15.8456 5.63039C17.33 7.11479 18.1639 9.12806 18.1639 11.2273V14.0214C18.1715 16.2188 18.6833 18.3851 19.6599 20.3536C19.7244 20.4746 19.7563 20.6103 19.7525 20.7474C19.7487 20.8845 19.7094 21.0183 19.6384 21.1356C19.5674 21.2529 19.4671 21.3497 19.3474 21.4166C19.2276 21.4835 19.0926 21.5181 18.9555 21.5171V21.5171ZM2.7688 19.9341H17.7286C16.9738 18.054 16.5843 16.0473 16.5809 14.0214V11.2273C16.5809 9.54791 15.9138 7.93729 14.7262 6.74978C13.5387 5.56226 11.9281 4.89512 10.2487 4.89512C8.5693 4.89512 6.95868 5.56226 5.77116 6.74978C4.58365 7.93729 3.91651 9.54791 3.91651 11.2273V14.0214C3.91313 16.0473 3.5236 18.054 2.7688 19.9341V19.9341Z\" fill=\"#EEEEEE\"/>\n                        <path d=\"M10.2487 24.6832C9.19907 24.6832 8.19243 24.2663 7.45024 23.5241C6.70804 22.7819 6.29108 21.7752 6.29108 20.7256C6.29108 20.5157 6.37447 20.3144 6.52291 20.1659C6.67135 20.0175 6.87268 19.9341 7.0826 19.9341C7.29253 19.9341 7.49385 20.0175 7.64229 20.1659C7.79073 20.3144 7.87412 20.5157 7.87412 20.7256C7.87468 21.3552 8.12522 21.9587 8.57067 22.4036C9.02364 22.8334 9.62426 23.073 10.2487 23.073C10.8731 23.073 11.4738 22.8334 11.9267 22.4036C12.0005 22.3298 12.0881 22.2713 12.1846 22.2314C12.281 22.1914 12.3843 22.1709 12.4887 22.1709C12.5931 22.1709 12.6964 22.1914 12.7929 22.2314C12.8893 22.2713 12.9769 22.3298 13.0507 22.4036C13.1245 22.4774 13.183 22.5651 13.223 22.6615C13.2629 22.7579 13.2835 22.8612 13.2835 22.9656C13.2835 23.07 13.2629 23.1733 13.223 23.2698C13.183 23.3662 13.1245 23.4538 13.0507 23.5276C12.6825 23.8949 12.2455 24.186 11.7647 24.3843C11.2839 24.5826 10.7688 24.6842 10.2487 24.6832Z\" fill=\"#EEEEEE\"/>\n                        <path d=\"M10.2487 4.89512C10.0388 4.89512 9.83749 4.81173 9.68905 4.66329C9.54061 4.51485 9.45721 4.31352 9.45721 4.1036V1.72902C9.45721 1.5191 9.54061 1.31777 9.68905 1.16933C9.83749 1.02089 10.0388 0.9375 10.2487 0.9375C10.4587 0.9375 10.66 1.02089 10.8084 1.16933C10.9569 1.31777 11.0403 1.5191 11.0403 1.72902V4.1036C11.0403 4.31352 10.9569 4.51485 10.8084 4.66329C10.66 4.81173 10.4587 4.89512 10.2487 4.89512Z\" fill=\"#EEEEEE\"/>\n                    </svg>\n                    </span>\n                    <span>\n                    <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M8.91665 16.8333C13.2889 16.8333 16.8333 13.2889 16.8333 8.91665C16.8333 4.5444 13.2889 1 8.91665 1C4.5444 1 1 4.5444 1 8.91665C1 13.2889 4.5444 16.8333 8.91665 16.8333Z\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        <path d=\"M20.0001 20L14.5112 14.5111\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                    </span>\n                    <div className=\"profile\" />\n                </div>\n                {addModal ? <NavbarAddTodo todos={todos} setTodos={setTodos} newTodo={newTodo} setNewTodo={setNewTodo} chosenCollection={chosenCollection} setAddModal={setAddModal} /> : <div style={{display: 'none'}} />}\n            </div>\n            ) : (\n                <>\n                    {addModal ? <NavbarAddTodo todos={todos} setTodos={setTodos} newTodo={newTodo} setNewTodo={setNewTodo} chosenCollection={chosenCollection} setAddModal={setAddModal} /> : <div style={{display: 'none'}} />}\n                    <div className=\"navbar_sm\">\n                    <span>\n                        <svg onClick={sidebarToggle} width=\"25\" height=\"25\" viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M3.125 7.8125H21.875C22.7375 7.8125 23.4375 7.1125 23.4375 6.25C23.4375 5.3875 22.7375 4.6875 21.875 4.6875H3.125C2.2625 4.6875 1.5625 5.3875 1.5625 6.25C1.5625 7.1125 2.2625 7.8125 3.125 7.8125ZM21.875 10.9375H3.125C2.2625 10.9375 1.5625 11.6375 1.5625 12.5C1.5625 13.3625 2.2625 14.0625 3.125 14.0625H21.875C22.7375 14.0625 23.4375 13.3625 23.4375 12.5C23.4375 11.6375 22.7375 10.9375 21.875 10.9375ZM21.875 17.1875H3.125C2.2625 17.1875 1.5625 17.8875 1.5625 18.75C1.5625 19.6125 2.2625 20.3125 3.125 20.3125H21.875C22.7375 20.3125 23.4375 19.6125 23.4375 18.75C23.4375 17.8875 22.7375 17.1875 21.875 17.1875Z\" fill=\"#EEEEEE\"/>\n                        </svg>\n                    </span>\n                    <span>\n                        <svg width=\"20\" height=\"25\" viewBox=\"0 0 20 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M18.9555 21.5171H1.54194C1.40701 21.5167 1.27443 21.4818 1.15678 21.4158C1.03913 21.3497 0.940327 21.2547 0.869745 21.1397C0.799163 21.0247 0.759148 20.8935 0.753501 20.7587C0.747854 20.6239 0.776762 20.4899 0.83748 20.3694C1.81412 18.401 2.32591 16.2346 2.33346 14.0372V11.2273C2.33346 9.12806 3.16739 7.11479 4.65178 5.63039C6.13618 4.146 8.14945 3.31207 10.2487 3.31207C12.348 3.31207 14.3612 4.146 15.8456 5.63039C17.33 7.11479 18.1639 9.12806 18.1639 11.2273V14.0214C18.1715 16.2188 18.6833 18.3851 19.6599 20.3536C19.7244 20.4746 19.7563 20.6103 19.7525 20.7474C19.7487 20.8845 19.7094 21.0183 19.6384 21.1356C19.5674 21.2529 19.4671 21.3497 19.3474 21.4166C19.2276 21.4835 19.0926 21.5181 18.9555 21.5171V21.5171ZM2.7688 19.9341H17.7286C16.9738 18.054 16.5843 16.0473 16.5809 14.0214V11.2273C16.5809 9.54791 15.9138 7.93729 14.7262 6.74978C13.5387 5.56226 11.9281 4.89512 10.2487 4.89512C8.5693 4.89512 6.95868 5.56226 5.77116 6.74978C4.58365 7.93729 3.91651 9.54791 3.91651 11.2273V14.0214C3.91313 16.0473 3.5236 18.054 2.7688 19.9341V19.9341Z\" fill=\"#EEEEEE\"/>\n                            <path d=\"M10.2487 24.6832C9.19907 24.6832 8.19243 24.2663 7.45024 23.5241C6.70804 22.7819 6.29108 21.7752 6.29108 20.7256C6.29108 20.5157 6.37447 20.3144 6.52291 20.1659C6.67135 20.0175 6.87268 19.9341 7.0826 19.9341C7.29253 19.9341 7.49385 20.0175 7.64229 20.1659C7.79073 20.3144 7.87412 20.5157 7.87412 20.7256C7.87468 21.3552 8.12522 21.9587 8.57067 22.4036C9.02364 22.8334 9.62426 23.073 10.2487 23.073C10.8731 23.073 11.4738 22.8334 11.9267 22.4036C12.0005 22.3298 12.0881 22.2713 12.1846 22.2314C12.281 22.1914 12.3843 22.1709 12.4887 22.1709C12.5931 22.1709 12.6964 22.1914 12.7929 22.2314C12.8893 22.2713 12.9769 22.3298 13.0507 22.4036C13.1245 22.4774 13.183 22.5651 13.223 22.6615C13.2629 22.7579 13.2835 22.8612 13.2835 22.9656C13.2835 23.07 13.2629 23.1733 13.223 23.2698C13.183 23.3662 13.1245 23.4538 13.0507 23.5276C12.6825 23.8949 12.2455 24.186 11.7647 24.3843C11.2839 24.5826 10.7688 24.6842 10.2487 24.6832Z\" fill=\"#EEEEEE\"/>\n                            <path d=\"M10.2487 4.89512C10.0388 4.89512 9.83749 4.81173 9.68905 4.66329C9.54061 4.51485 9.45721 4.31352 9.45721 4.1036V1.72902C9.45721 1.5191 9.54061 1.31777 9.68905 1.16933C9.83749 1.02089 10.0388 0.9375 10.2487 0.9375C10.4587 0.9375 10.66 1.02089 10.8084 1.16933C10.9569 1.31777 11.0403 1.5191 11.0403 1.72902V4.1036C11.0403 4.31352 10.9569 4.51485 10.8084 4.66329C10.66 4.81173 10.4587 4.89512 10.2487 4.89512Z\" fill=\"#EEEEEE\"/>\n                        </svg>\n                    </span>\n                    {chosenCollection ? (\n                        <button className=\"addTodo_btn nav_btn\" onClick={() => setAddModal(true)}>\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 1V17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                <path d=\"M1 9H17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            </svg>\n                        </button>\n                    ) : (\n                        <button className=\"navAddTodo_btn_disabled nav_btn\">\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M9 1V17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                                <path d=\"M1 9H17\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            </svg>\n                        </button>\n                    )}\n                    <span>\n                        <svg width=\"21\" height=\"21\" viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M8.91665 16.8333C13.2889 16.8333 16.8333 13.2889 16.8333 8.91665C16.8333 4.5444 13.2889 1 8.91665 1C4.5444 1 1 4.5444 1 8.91665C1 13.2889 4.5444 16.8333 8.91665 16.8333Z\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            <path d=\"M20.0001 20L14.5112 14.5111\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </svg>\n                    </span>\n                    <div className=\"profile\" />\n                </div>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default Navbar\n","const CollectionList = ({setNewCollection, collections, setCollections, setChosenCollection, setShowSidebar}) => {\n\n    const collectionsArr = collections.map((c) => { return c.content });\n    const isDuplicate = collectionsArr.some((c, idx) => { \n            return collectionsArr.indexOf(c) !== idx\n        });\n\n        \n        if(isDuplicate){\n            const newCollections = [...collections];\n            const uniqueCollections = [...newCollections.reduce((map, obj) => map.set(obj.content, obj), new Map()).values()];\n            setCollections(uniqueCollections);\n            setNewCollection('');\n        }\n\n    return (\n        <ul>\n                {collections.map((collection) => (\n                    <li className=\"collection\" key={collection.id} onClick={() => {setChosenCollection(collection.content); setShowSidebar(false)}}>\n                        <span>\n                            <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M11.4 1L4.25 8.2L1 4.92727\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                            </svg>\n                        </span>\n                        {collection.content}\n                    </li>\n                ))\n                }\n            </ul>\n    )\n}\n\nexport default CollectionList\n","import \"./Sidebar.css\";\nimport React, { useCallback } from 'react'\nimport CollectionList from \"./CollectionList\";\n\nconst Sidebar = ({showSidebar, setShowSidebar, newCollection, setNewCollection, collections, setCollections, setChosenCollection}) => {\n    const formSubmitted = useCallback((e) => {\n        e.preventDefault();\n        if (!newCollection.trim()) return; //Avoid empty collections\n\n        setCollections([\n            {\n                id: collections.length ? collections[0].id + 1 : 1,\n                content: newCollection.toLowerCase(),\n            },\n                ...collections\n        ]);\n        setNewCollection('');\n        }, [newCollection, collections]);\n\n    const onNewCollectionChange = useCallback((e) => {\n        setNewCollection(e.target.value);\n    }, []);\n\n    return (\n        <div className={showSidebar ? ['sideBar', 'active'].join(' ') : \"sideBar\"}>\n            <p>\n                Collections\n            </p>\n            <CollectionList collections={collections} setCollections={setCollections} setNewCollection={setNewCollection} setChosenCollection={setChosenCollection} setShowSidebar={setShowSidebar} />\n            <form className=\"addCollection_form\" onSubmit={formSubmitted}>\n                <input\n                    className=\"addCollection_input\"\n                    autoComplete=\"off\"\n                    placeholder=\"Add a Collection...\"\n                    id=\"newCollection\"\n                    name=\"newCollection\"\n                    value={newCollection}\n                    onChange={onNewCollectionChange}\n                />\n                <button className=\"addCollection_btn\">\n                    <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M7.87097 1.19354V13.0645\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        <path d=\"M1.93548 7.12903H13.8064\" stroke=\"#EEEEEE\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                    </svg>\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import \"./App.css\";\nimport { useNewTodo } from \"./Hooks/useNewTodo\";\nimport { useTodos } from \"./Hooks/useTodos\";\nimport { useShowSidebar } from './Hooks/useShowSidebar';\nimport { useNewCollection } from \"./Hooks/useNewCollection\";\nimport { useCollections } from \"./Hooks/useCollections\";\nimport { useChosenCollection } from \"./Hooks/useChosenCollection\";\nimport TodoCollection from \"./components/TodoCollection\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport TodoActions from \"./components/TodoActions\";\nimport Navbar from \"./components/Navbar\";\nimport Sidebar from \"./components/Sidebar\";\n\nconst App = () => {\n  const newTodo = useNewTodo();\n  const todos = useTodos();\n  const showSidebar = useShowSidebar();\n  const newCollection = useNewCollection();\n  const collections = useCollections();\n  const chosenCollection = useChosenCollection();\n\n  return (\n    <div>\n      <Navbar {...showSidebar} {...newTodo} {...todos} {...chosenCollection} />\n      <div className=\"App\">\n        <Sidebar {...showSidebar} {...newCollection} {...collections} {...chosenCollection} />\n        <div className=\"todoApp_inner\">\n          <TodoCollection {...chosenCollection} />\n          {chosenCollection.chosenCollection === '' ? <div style={{display: 'none'}} />\n          : \n          <>\n            <TodoForm {...newTodo} {...todos} {...chosenCollection} />\n            <TodoList {...todos} {...chosenCollection} />\n            <TodoActions {...todos} />\n          </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { useState } from \"react\";\n\nexport const useNewTodo = () => {\n    const [newTodo, setNewTodo] = useState('');\n\n    return {\n        newTodo,\n        setNewTodo\n    }\n}","import { useState } from \"react\";\n\nexport const useTodos = () => {\n    const [todos, setTodos] = useState([]);\n\n    return {\n        todos,\n        setTodos\n    }\n}","import { useState } from 'react';\n\nexport const useShowSidebar = () => {\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    return {\n        showSidebar,\n        setShowSidebar\n    }\n}\n","import { useState } from \"react\";\n\nexport const useNewCollection = () => {\n    const [newCollection, setNewCollection] = useState('');\n\n    return {\n        newCollection,\n        setNewCollection\n    }\n}","import { useState } from \"react\";\n\nexport const useCollections = () => {\n    const [collections, setCollections] = useState([]);\n\n    return {\n        collections,\n        setCollections\n    }\n}","import { useState } from \"react\";\n\nexport const useChosenCollection = () => {\n    const [chosenCollection, setChosenCollection] = useState('');\n\n    return {\n        chosenCollection,\n        setChosenCollection\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}